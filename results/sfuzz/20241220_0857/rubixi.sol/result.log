Extract contract Rubixi from /sb/rubixi.sol
Extracted 1 contract(s) from /sb/rubixi.sol
[0;32m> Created "fuzzMe"[0m
[0;32m> To fuzz contracts:[0m
  chmod +x fuzzMe
  ./fuzzMe
contracts/Rubixi.sol:83:42: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
                 if (collectedFees == 0) throw;
                                         ^---^
contracts/Rubixi.sol:93:42: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
                 if (collectedFees == 0) throw;
                                         ^---^
contracts/Rubixi.sol:100:58: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
                 if (collectedFees == 0 || _pcent > 100) throw;
                                                         ^---^
contracts/Rubixi.sol:113:50: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
                 if (_mult > 300 || _mult < 120) throw;
                                                 ^---^
contracts/Rubixi.sol:119:33: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
                 if (_fee > 10) throw;
                                ^---^
contracts/Rubixi.sol:74:26: Warning: Failure condition of 'send' ignored. Consider using 'transfer' instead.
                         participants[payoutOrder].etherAddress.send(payoutToSend);
                         ^-------------------------------------------------------^
contracts/Rubixi.sol:85:18: Warning: Failure condition of 'send' ignored. Consider using 'transfer' instead.
                 creator.send(collectedFees);
                 ^-------------------------^
contracts/Rubixi.sol:95:18: Warning: Failure condition of 'send' ignored. Consider using 'transfer' instead.
                 creator.send(_amt);
                 ^----------------^
contracts/Rubixi.sol:103:18: Warning: Failure condition of 'send' ignored. Consider using 'transfer' instead.
                 creator.send(feesToCollect);
                 ^-------------------------^
contracts/Rubixi.sol:23:10: Warning: No visibility specified. Defaulting to "public". 
         function DynamicPyramid() {
         ^ (Relevant source part starts here and spans across multiple lines).
contracts/Rubixi.sol:39:10: Warning: No visibility specified. Defaulting to "public". 
         function() {
         ^ (Relevant source part starts here and spans across multiple lines).
contracts/Rubixi.sol:82:10: Warning: No visibility specified. Defaulting to "public". 
         function collectAllFees() onlyowner {
         ^ (Relevant source part starts here and spans across multiple lines).
contracts/Rubixi.sol:89:10: Warning: No visibility specified. Defaulting to "public". 
         function collectFeesInEther(uint _amt) onlyowner {
         ^ (Relevant source part starts here and spans across multiple lines).
contracts/Rubixi.sol:99:10: Warning: No visibility specified. Defaulting to "public". 
         function collectPercentOfFees(uint _pcent) onlyowner {
         ^ (Relevant source part starts here and spans across multiple lines).
contracts/Rubixi.sol:108:10: Warning: No visibility specified. Defaulting to "public". 
         function changeOwner(address _owner) onlyowner {
         ^ (Relevant source part starts here and spans across multiple lines).
contracts/Rubixi.sol:112:10: Warning: No visibility specified. Defaulting to "public". 
         function changeMultiplier(uint _mult) onlyowner {
         ^ (Relevant source part starts here and spans across multiple lines).
contracts/Rubixi.sol:118:10: Warning: No visibility specified. Defaulting to "public". 
         function changeFeePercentage(uint _fee) onlyowner {
         ^ (Relevant source part starts here and spans across multiple lines).
contracts/Rubixi.sol:125:10: Warning: No visibility specified. Defaulting to "public". 
         function currentMultiplier() constant returns(uint multiplier, string info) {
         ^ (Relevant source part starts here and spans across multiple lines).
contracts/Rubixi.sol:130:10: Warning: No visibility specified. Defaulting to "public". 
         function currentFeePercentage() constant returns(uint fee, string info) {
         ^ (Relevant source part starts here and spans across multiple lines).
contracts/Rubixi.sol:135:10: Warning: No visibility specified. Defaulting to "public". 
         function currentPyramidBalanceApproximately() constant returns(uint pyramidBalance, string info) {
         ^ (Relevant source part starts here and spans across multiple lines).
contracts/Rubixi.sol:140:10: Warning: No visibility specified. Defaulting to "public". 
         function nextPayoutWhenPyramidBalanceTotalsApproximately() constant returns(uint balancePayout) {
         ^ (Relevant source part starts here and spans across multiple lines).
contracts/Rubixi.sol:144:10: Warning: No visibility specified. Defaulting to "public". 
         function feesSeperateFromBalanceApproximately() constant returns(uint fees) {
         ^ (Relevant source part starts here and spans across multiple lines).
contracts/Rubixi.sol:148:10: Warning: No visibility specified. Defaulting to "public". 
         function totalParticipants() constant returns(uint count) {
         ^ (Relevant source part starts here and spans across multiple lines).
contracts/Rubixi.sol:152:10: Warning: No visibility specified. Defaulting to "public". 
         function numberOfParticipantsWaitingForPayout() constant returns(uint count) {
         ^ (Relevant source part starts here and spans across multiple lines).
contracts/Rubixi.sol:156:10: Warning: No visibility specified. Defaulting to "public". 
         function participantDetails(uint orderInPyramid) constant returns(address Address, uint Payout) {
         ^ (Relevant source part starts here and spans across multiple lines).
assets/NormalAttacker.sol:5:3: Warning: No visibility specified. Defaulting to "public". 
  function() payable {
  ^ (Relevant source part starts here and spans across multiple lines).
assets/ReentrancyAttacker.sol:8:7: Warning: Return value of low-level calls not used.
      msg.sender.call(bytes4(255));
      ^--------------------------^
assets/ReentrancyAttacker.sol:5:3: Warning: No visibility specified. Defaulting to "public". 
  function() payable {
  ^ (Relevant source part starts here and spans across multiple lines).
>> Fuzz Rubixi
** Write stats: 0.012801
** Write stats: 5.00036
** Write stats: 10.0002
** Write stats: 15.0002
** Write stats: 20.0007
** Write stats: 25.0006
** Write stats: 30.0006
** Write stats: 35.0001
** Write stats: 40.0403
** Write stats: 45.0006
** Write stats: 50.0003
** Write stats: 55.0003
** Write stats: 60.0001
** Write stats: 65.0005
** Write stats: 70.0008
** Write stats: 75.0006
** Write stats: 80.1467
** Write stats: 85.0005
** Write stats: 90.0001
** Write stats: 95.0003
** Write stats: 100.013
** Write stats: 105.001
** Write stats: 110
** Write stats: 115.001
** Write stats: 120
** Write stats: 125.001
** Write stats: 130
** Write stats: 135
** Write stats: 140
** Write stats: 145
** Write stats: 150
** Write stats: 155
** Write stats: 160
** Write stats: 165
** Write stats: 170
** Write stats: 175
** Write stats: 180.001
** Write stats: 185.001
** Write stats: 190.015
** Write stats: 195
** Write stats: 200
** Write stats: 205
** Write stats: 210
** Write stats: 215
** Write stats: 220
** Write stats: 225.001
** Write stats: 230
** Write stats: 235
** Write stats: 240.001
** Write stats: 245.002
** Write stats: 250.001
** Write stats: 255
** Write stats: 260
** Write stats: 265.001
** Write stats: 270
** Write stats: 275
** Write stats: 280
** Write stats: 285.001
** Write stats: 290.001
** Write stats: 295
** Write stats: 300.007
** Write stats: 305.001
** Write stats: 310.001
** Write stats: 315
** Write stats: 320
** Write stats: 325.001
** Write stats: 330
** Write stats: 335.001
** Write stats: 340.001
** Write stats: 345
** Write stats: 350
** Write stats: 355.001
** Write stats: 360.001
** Write stats: 365
** Write stats: 370.019
** Write stats: 375.001
** Write stats: 380.001
** Write stats: 385
** Write stats: 390
** Write stats: 395
** Write stats: 400.001
** Write stats: 405.001
** Write stats: 410
** Write stats: 415
** Write stats: 420
** Write stats: 425
** Write stats: 430
** Write stats: 435.001
** Write stats: 440.001
** Write stats: 445.001
** Write stats: 450
** Write stats: 455.001
** Write stats: 460.001
** Write stats: 465
** Write stats: 470.001
** Write stats: 475
** Write stats: 480
** Write stats: 485
** Write stats: 490.001
** Write stats: 495.001
** Write stats: 500.001
** Write stats: 505
** Write stats: 510
** Write stats: 515.001
** Write stats: 520.001
** Write stats: 525.001
** Write stats: 530.006
** Write stats: 535
** Write stats: 540.001
** Write stats: 545.001
** Write stats: 550.009
** Write stats: 555
** Write stats: 560
** Write stats: 565
** Write stats: 570
** Write stats: 575
** Write stats: 580
** Write stats: 585
** Write stats: 590.001
** Write stats: 595.001
** Write stats: 598.007
