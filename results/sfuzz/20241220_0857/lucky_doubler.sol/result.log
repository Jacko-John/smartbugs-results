Extract contract LuckyDoubler from /sb/lucky_doubler.sol
Extracted 1 contract(s) from /sb/lucky_doubler.sol
[0;32m> Created "fuzzMe"[0m
[0;32m> To fuzz contracts:[0m
  chmod +x fuzzMe
  ./fuzzMe
contracts/LuckyDoubler.sol:33:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function LuckyDoubler() {
    ^ (Relevant source part starts here and spans across multiple lines).
contracts/LuckyDoubler.sol:142:41: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (multi < 110 || multi > 150) throw;
                                        ^---^
contracts/LuckyDoubler.sol:149:13: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
            throw;
            ^---^
contracts/LuckyDoubler.sol:95:9: Warning: Variable is declared as a storage pointer. Use an explicit "storage" keyword to silence this warning.
        Entry theEntry = entries[unpaidEntries[index]];
        ^------------^
contracts/LuckyDoubler.sol:60:14: Warning: Failure condition of 'send' ignored. Consider using 'transfer' instead.
             msg.sender.send(msg.value);
             ^------------------------^
contracts/LuckyDoubler.sol:74:10: Warning: Failure condition of 'send' ignored. Consider using 'transfer' instead.
        	msg.sender.send(msg.value - 1 ether);
        	^----------------------------------^
contracts/LuckyDoubler.sol:102:13: Warning: Failure condition of 'send' ignored. Consider using 'transfer' instead.
            theEntry.entryAddress.send(payout);
            ^--------------------------------^
contracts/LuckyDoubler.sol:116:21: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
        uint fees = this.balance - balance;
                    ^----------^
contracts/LuckyDoubler.sol:119:17: Warning: Failure condition of 'send' ignored. Consider using 'transfer' instead.
                owner.send(fees);
                ^--------------^
contracts/LuckyDoubler.sol:33:5: Warning: No visibility specified. Defaulting to "public". 
    function LuckyDoubler() {
    ^ (Relevant source part starts here and spans across multiple lines).
contracts/LuckyDoubler.sol:53:5: Warning: No visibility specified. Defaulting to "public". 
    function() {
    ^ (Relevant source part starts here and spans across multiple lines).
contracts/LuckyDoubler.sol:130:35: Warning: "block.blockhash()" has been deprecated in favor of "blockhash()"
        uint256 hashVal = uint256(block.blockhash(lastBlockNumber));
                                  ^-------------^
contracts/LuckyDoubler.sol:137:5: Warning: No visibility specified. Defaulting to "public". 
    function changeOwner(address newOwner) onlyowner {
    ^ (Relevant source part starts here and spans across multiple lines).
contracts/LuckyDoubler.sol:141:5: Warning: No visibility specified. Defaulting to "public". 
    function changeMultiplier(uint multi) onlyowner {
    ^ (Relevant source part starts here and spans across multiple lines).
contracts/LuckyDoubler.sol:147:5: Warning: No visibility specified. Defaulting to "public". 
    function changeFee(uint newFee) onlyowner {
    ^ (Relevant source part starts here and spans across multiple lines).
contracts/LuckyDoubler.sol:155:5: Warning: No visibility specified. Defaulting to "public". 
    function multiplierFactor() constant returns (uint factor, string info) {
    ^ (Relevant source part starts here and spans across multiple lines).
contracts/LuckyDoubler.sol:160:5: Warning: No visibility specified. Defaulting to "public". 
    function currentFee() constant returns (uint feePercentage, string info) {
    ^ (Relevant source part starts here and spans across multiple lines).
contracts/LuckyDoubler.sol:165:5: Warning: No visibility specified. Defaulting to "public". 
    function totalEntries() constant returns (uint count, string info) {
    ^ (Relevant source part starts here and spans across multiple lines).
contracts/LuckyDoubler.sol:170:5: Warning: No visibility specified. Defaulting to "public". 
    function userStats(address user) constant returns (uint deposits, uint payouts, string info)
    ^ (Relevant source part starts here and spans across multiple lines).
contracts/LuckyDoubler.sol:180:5: Warning: No visibility specified. Defaulting to "public". 
    function entryDetails(uint index) constant returns (address user, uint payout, bool paid, string info)
    ^ (Relevant source part starts here and spans across multiple lines).
assets/NormalAttacker.sol:5:3: Warning: No visibility specified. Defaulting to "public". 
  function() payable {
  ^ (Relevant source part starts here and spans across multiple lines).
assets/ReentrancyAttacker.sol:8:7: Warning: Return value of low-level calls not used.
      msg.sender.call(bytes4(255));
      ^--------------------------^
assets/ReentrancyAttacker.sol:5:3: Warning: No visibility specified. Defaulting to "public". 
  function() payable {
  ^ (Relevant source part starts here and spans across multiple lines).
>> Fuzz LuckyDoubler
** Write stats: 0.006431
** Write stats: 5.00029
** Write stats: 10.0003
** Write stats: 15.0002
** Write stats: 20.0003
** Write stats: 25.0003
** Write stats: 30.0003
** Write stats: 35.0001
** Write stats: 40.0003
** Write stats: 45.0003
** Write stats: 50.0002
** Write stats: 55.0003
** Write stats: 60.0001
** Write stats: 65.0002
** Write stats: 70.0003
** Write stats: 75.0001
** Write stats: 80.0002
** Write stats: 85.0002
** Write stats: 90.0005
** Write stats: 95.0001
** Write stats: 100
** Write stats: 105
** Write stats: 110
** Write stats: 115
** Write stats: 120
** Write stats: 125
** Write stats: 130
** Write stats: 135
** Write stats: 140
** Write stats: 145
** Write stats: 150.009
** Write stats: 155
** Write stats: 160.001
** Write stats: 165.015
** Write stats: 170
** Write stats: 175
** Write stats: 180.001
** Write stats: 185
** Write stats: 190
** Write stats: 195
** Write stats: 200.001
** Write stats: 205
** Write stats: 210
** Write stats: 215
** Write stats: 220.001
** Write stats: 225
** Write stats: 230
** Write stats: 235
** Write stats: 240
** Write stats: 245
** Write stats: 250.001
** Write stats: 255.001
** Write stats: 260
** Write stats: 265
** Write stats: 270.003
** Write stats: 275
** Write stats: 280
** Write stats: 285.001
** Write stats: 290
** Write stats: 295.001
** Write stats: 300.015
** Write stats: 305
** Write stats: 310
** Write stats: 315
** Write stats: 320
** Write stats: 325
** Write stats: 330
** Write stats: 335
** Write stats: 340
** Write stats: 345
** Write stats: 350
** Write stats: 355
** Write stats: 360.001
** Write stats: 365.001
** Write stats: 370.001
** Write stats: 375
** Write stats: 380
** Write stats: 385
** Write stats: 390
** Write stats: 395
** Write stats: 400.001
** Write stats: 405.005
** Write stats: 410
** Write stats: 415
** Write stats: 420
** Write stats: 425.001
** Write stats: 430
** Write stats: 435
** Write stats: 440.001
** Write stats: 445
** Write stats: 450
** Write stats: 455
** Write stats: 460
** Write stats: 465
** Write stats: 470.006
** Write stats: 475
** Write stats: 480
** Write stats: 485
** Write stats: 490
** Write stats: 495
** Write stats: 500.001
** Write stats: 505
** Write stats: 510.02
** Write stats: 515
** Write stats: 520
** Write stats: 525
** Write stats: 530
** Write stats: 535.001
** Write stats: 540
** Write stats: 545
** Write stats: 550
** Write stats: 555
** Write stats: 560.001
** Write stats: 565
** Write stats: 570
** Write stats: 580.001
** Write stats: 585.001
** Write stats: 590.001
** Write stats: 595
** Write stats: 598.016
