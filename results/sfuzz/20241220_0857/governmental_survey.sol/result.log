Extract contract Attacker from /sb/governmental_survey.sol
Extract contract Governmental from /sb/governmental_survey.sol
Extracted 2 contract(s) from /sb/governmental_survey.sol
[0;32m> Created "fuzzMe"[0m
[0;32m> To fuzz contracts:[0m
  chmod +x fuzzMe
  ./fuzzMe
contracts/Attacker.sol:17:3: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
  function Governmental() {
  ^ (Relevant source part starts here and spans across multiple lines).
contracts/Attacker.sol:19:28: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (msg.value<1 ether) throw;
                           ^---^
contracts/Attacker.sol:23:30: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (msg.value<jackpot/2) throw;
                             ^---^
contracts/Attacker.sol:32:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
contracts/Attacker.sol:34:5: Warning: Failure condition of 'send' ignored. Consider using 'transfer' instead.
    lastInvestor.send(jackpot);
    ^------------------------^
contracts/Attacker.sol:35:16: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
    owner.send(this.balance-1 ether);
               ^----------^
contracts/Attacker.sol:35:5: Warning: Failure condition of 'send' ignored. Consider using 'transfer' instead.
    owner.send(this.balance-1 ether);
    ^------------------------------^
contracts/Attacker.sol:17:3: Warning: No visibility specified. Defaulting to "public". 
  function Governmental() {
  ^ (Relevant source part starts here and spans across multiple lines).
contracts/Attacker.sol:19:9: Warning: "msg.value" used in non-payable function. Do you want to add the "payable" modifier to this function?
    if (msg.value<1 ether) throw;
        ^-------^
contracts/Attacker.sol:22:3: Warning: No visibility specified. Defaulting to "public". 
  function invest() {
  ^ (Relevant source part starts here and spans across multiple lines).
contracts/Attacker.sol:23:9: Warning: "msg.value" used in non-payable function. Do you want to add the "payable" modifier to this function?
    if (msg.value<jackpot/2) throw;
        ^-------^
contracts/Attacker.sol:25:16: Warning: "msg.value" used in non-payable function. Do you want to add the "payable" modifier to this function?
    jackpot += msg.value/2;
               ^-------^
contracts/Attacker.sol:30:3: Warning: No visibility specified. Defaulting to "public". 
  function resetInvestment() {
  ^ (Relevant source part starts here and spans across multiple lines).
contracts/Attacker.sol:45:3: Warning: No visibility specified. Defaulting to "public". 
  function attack(address target, uint count) {
  ^ (Relevant source part starts here and spans across multiple lines).
contracts/Attacker.sol:47:23: Warning: "msg.gas" has been deprecated in favor of "gasleft()"
      this.attack.gas(msg.gas-2000)(target, count+1);
                      ^-----^
contracts/Governmental.sol:17:3: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
  function Governmental() {
  ^ (Relevant source part starts here and spans across multiple lines).
contracts/Governmental.sol:19:28: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (msg.value<1 ether) throw;
                           ^---^
contracts/Governmental.sol:23:30: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (msg.value<jackpot/2) throw;
                             ^---^
contracts/Governmental.sol:32:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
contracts/Governmental.sol:34:5: Warning: Failure condition of 'send' ignored. Consider using 'transfer' instead.
    lastInvestor.send(jackpot);
    ^------------------------^
contracts/Governmental.sol:35:16: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
    owner.send(this.balance-1 ether);
               ^----------^
contracts/Governmental.sol:35:5: Warning: Failure condition of 'send' ignored. Consider using 'transfer' instead.
    owner.send(this.balance-1 ether);
    ^------------------------------^
contracts/Governmental.sol:17:3: Warning: No visibility specified. Defaulting to "public". 
  function Governmental() {
  ^ (Relevant source part starts here and spans across multiple lines).
contracts/Governmental.sol:19:9: Warning: "msg.value" used in non-payable function. Do you want to add the "payable" modifier to this function?
    if (msg.value<1 ether) throw;
        ^-------^
contracts/Governmental.sol:22:3: Warning: No visibility specified. Defaulting to "public". 
  function invest() {
  ^ (Relevant source part starts here and spans across multiple lines).
contracts/Governmental.sol:23:9: Warning: "msg.value" used in non-payable function. Do you want to add the "payable" modifier to this function?
    if (msg.value<jackpot/2) throw;
        ^-------^
contracts/Governmental.sol:25:16: Warning: "msg.value" used in non-payable function. Do you want to add the "payable" modifier to this function?
    jackpot += msg.value/2;
               ^-------^
contracts/Governmental.sol:30:3: Warning: No visibility specified. Defaulting to "public". 
  function resetInvestment() {
  ^ (Relevant source part starts here and spans across multiple lines).
contracts/Governmental.sol:45:3: Warning: No visibility specified. Defaulting to "public". 
  function attack(address target, uint count) {
  ^ (Relevant source part starts here and spans across multiple lines).
contracts/Governmental.sol:47:23: Warning: "msg.gas" has been deprecated in favor of "gasleft()"
      this.attack.gas(msg.gas-2000)(target, count+1);
                      ^-----^
assets/NormalAttacker.sol:5:3: Warning: No visibility specified. Defaulting to "public". 
  function() payable {
  ^ (Relevant source part starts here and spans across multiple lines).
assets/ReentrancyAttacker.sol:8:7: Warning: Return value of low-level calls not used.
      msg.sender.call(bytes4(255));
      ^--------------------------^
assets/ReentrancyAttacker.sol:5:3: Warning: No visibility specified. Defaulting to "public". 
  function() payable {
  ^ (Relevant source part starts here and spans across multiple lines).
>> Fuzz Attacker
** Write stats: 0.165407
** Write stats: 5.04409
** Write stats: 10.0123
** Write stats: 15.0253
** Write stats: 20.0042
** Write stats: 25.0062
** Write stats: 30.031
** Write stats: 35.0734
** Write stats: 49.3133
>> Fuzz Governmental
** Write stats: 0.004638
** Write stats: 5.00005
** Write stats: 10.0003
** Write stats: 15.0001
** Write stats: 20.0002
** Write stats: 25.0001
** Write stats: 30.0002
** Write stats: 35.0001
** Write stats: 40.0001
** Write stats: 45.0001
** Write stats: 50.0001
** Write stats: 55.0001
** Write stats: 60.0001
** Write stats: 65.0001
** Write stats: 70.0001
** Write stats: 75.0001
** Write stats: 80.0001
** Write stats: 85.0001
** Write stats: 90.0001
** Write stats: 95.0001
** Write stats: 100
** Write stats: 105
** Write stats: 110
** Write stats: 115
** Write stats: 120
** Write stats: 125
** Write stats: 130
** Write stats: 135
** Write stats: 140
** Write stats: 145
** Write stats: 150
** Write stats: 155
** Write stats: 160
** Write stats: 165
** Write stats: 170
** Write stats: 175
** Write stats: 180
** Write stats: 185
** Write stats: 190
** Write stats: 195
** Write stats: 200
** Write stats: 205
** Write stats: 210
** Write stats: 215
** Write stats: 220
** Write stats: 225
** Write stats: 230
** Write stats: 235
** Write stats: 240
** Write stats: 245
** Write stats: 250
** Write stats: 255.004
** Write stats: 260
** Write stats: 265
** Write stats: 270
** Write stats: 275
** Write stats: 280
** Write stats: 285
** Write stats: 290
** Write stats: 295
** Write stats: 298.002
